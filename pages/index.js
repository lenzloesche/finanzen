import Head from "next/head";
import { useEffect, useState } from "react";
import dynamic from "next/dynamic";
import InputForm from "@/components/InputForm";

const MyPieChart = dynamic(() => import("@/components/charts/piechart"), {
  ssr: false,
});
const startingInput = {
  Groceries: {
    value: 0,
    color: "grey",
  },
  House: {
    value: 0,
    color: "blue",
  },
  Fun: {
    value: 0,
    color: "red",
  },
  Children: {
    color: "green",
    value: 0,
  },
  Savings: {
    color: "violet",
    value: 0,
  },
};

const months = [
  "January",
  "February",
  "March",
  "April",
  "May",
  "June",
  "July",
  "August",
  "September",
  "October",
  "November",
  "December",
];

export default function Home({ data, setData }) {
  const [currentYear, setCurrentYear] = useState(2023);
  const [currentMonth, setCurrentMonth] = useState(0);
  const [currentData, setCurrentData] = useState([]);
  const [inputFields, setInputFields] = useState(
    JSON.parse(JSON.stringify(startingInput))
  );

  useEffect(() => {
    switchDates(currentYear, currentMonth);
  }, []);

  function clearInputFields(newData) {
    setInputFields(newData);
  }

  function handleSubmit(event) {
    event.preventDefault();

    const newData = {
      Groceries: {
        value: parseInt(inputFields["Groceries"].value),
        color: inputFields["Groceries"].color,
      },
      House: {
        value: parseInt(inputFields["House"].value),
        color: inputFields["House"].color,
      },
      Fun: {
        value: parseInt(inputFields["Fun"].value),
        color: inputFields["Fun"].color,
      },
      Children: {
        color: inputFields["Children"].color,
        value: parseInt(inputFields["Children"].value),
      },
      Savings: {
        color: inputFields["Savings"].color,
        value: parseInt(inputFields["Savings"].value),
      },
    };

    let newFullData = createYearAndMonth(
      { ...data },
      currentYear,
      currentMonth
    );
    newFullData[currentYear][currentMonth] = newData;
    setData(newFullData);
    setCurrentData(newData);
  }

  function switchDates(switchToYear, switchToMonth) {
    const newFullData = createYearAndMonth(
      { ...data },
      switchToYear,
      switchToMonth
    );
    const newData = { ...newFullData[switchToYear][switchToMonth] };
    setData(newFullData);
    setCurrentData(newData);
    clearInputFields(newData);
  }

  function createYearAndMonth(newFullData, yearToCreate, monthToCreate) {
    let fullDataCopy = { ...newFullData };
    if (!fullDataCopy[yearToCreate]) {
      fullDataCopy[yearToCreate] = {};
    }
    if (!fullDataCopy[yearToCreate][monthToCreate]) {
      fullDataCopy[yearToCreate][monthToCreate] = JSON.parse(
        JSON.stringify(startingInput)
      );
    }
    return fullDataCopy;
  }

  function handleMinusYear() {
    setCurrentYear(currentYear - 1);
    switchDates(currentYear - 1, currentMonth);
  }
  function handlePlusYear() {
    setCurrentYear(currentYear + 1);
    switchDates(currentYear + 1, currentMonth);
  }
  function handleMinusMonth() {
    if (currentMonth === 0) {
      setCurrentMonth(11);
      setCurrentYear(currentYear - 1);
      switchDates(currentYear - 1, 11);
    } else {
      setCurrentMonth(currentMonth - 1);
      switchDates(currentYear, currentMonth - 1);
    }
  }
  function handlePlusMonth() {
    if (currentMonth === 11) {
      setCurrentMonth(0);
      setCurrentYear(currentYear + 1);
      switchDates(currentYear + 1, 0);
    } else {
      setCurrentMonth(currentMonth + 1);
      switchDates(currentYear, currentMonth + 1);
    }
  }

  return (
    <>
      <Head>
        <title>Finanzen</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <h1>INSIGHT</h1>
        <button onClick={handleMinusYear}>-</button> <h2>{currentYear}</h2>{" "}
        <button onClick={handlePlusYear}>+</button>
        <br />
        <button onClick={handleMinusMonth}>-</button>{" "}
        <h3>{months[currentMonth]}</h3>{" "}
        <button onClick={handlePlusMonth}>+</button>
        <InputForm
          handleSubmit={handleSubmit}
          inputFields={inputFields}
          setInputFields={setInputFields}
        />
        <MyPieChart data={currentData}></MyPieChart>
      </main>
    </>
  );
}
